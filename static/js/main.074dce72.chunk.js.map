{"version":3,"sources":["types/Filter.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TableList.tsx","components/TodoList/TodoList.tsx","utils/filterTodos.ts","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterStatus","setTodo","todo","type","payload","currentTodoReducer","state","action","setQueryAction","query","setFilterTypeAction","startTodoFilters","status","filterReducer","todoFilters","setTodosAction","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppSelector","useDispatch","useSelector","TableList","renderedTodos","dispatch","selectedTodo","length","map","title","completed","id","className","classNames","onClick","TodoList","filterStatus","visibleTodos","useMemo","res","All","Completed","Active","el","toLowerCase","includes","filterTodos","TodoFilter","useState","setQuery","useEffect","onSubmit","e","preventDefault","handleFormSubmit","onChange","event","selectedFilterStatus","currentTarget","value","handleFilterStatus","placeholder","target","handleOnChange","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","json","Loader","TodoModal","selectedUser","setSelectedUser","isUserLoading","setIsUserLoading","userId","user","href","name","App","data","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.074dce72.chunk.js","sourcesContent":["export enum FilterStatus {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nexport const removeTodo = (): RemoveTodoAction => ({\n  type: 'currentTodo/REMOVE',\n});\n\nexport const setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","type SetQueryAction = {\n  type: 'filter/QUERY',\n  payload: string,\n};\n\ntype SetFilterAction = {\n  type: 'filter/TYPE',\n  payload: string,\n};\n\ntype Action = SetQueryAction | SetFilterAction;\n\nexport const setQueryAction = ((query: string): SetQueryAction => ({\n  type: 'filter/QUERY',\n  payload: query,\n}));\n\nexport const setFilterTypeAction = ((type: string): SetFilterAction => ({\n  type: 'filter/TYPE',\n  payload: type,\n}));\n\nexport const actions = { setQueryAction, setFilterTypeAction };\n\nconst startTodoFilters = {\n  query: '',\n  status: 'all',\n};\n\nconst filterReducer = (todoFilters = startTodoFilters, action: Action) => {\n  switch (action.type) {\n    case 'filter/QUERY':\n      return {\n        ...todoFilters,\n        query: action.payload,\n      };\n\n    case 'filter/TYPE':\n      return {\n        ...todoFilters,\n        status: action.payload,\n      };\n\n    default:\n      return {\n        ...todoFilters,\n      };\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = {\n  type: 'todos/SET',\n  payload: Todo[],\n};\n\nexport const setTodosAction = (todos: Todo[]): SetTodosAction => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\nexport const actions = { setTodosAction };\n\nconst todosReducer = (todos: Todo[] = [], action: SetTodosAction): Todo[] => {\n  switch (action.type) {\n    case 'todos/SET':\n      return action.payload;\n\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../app/hooks';\nimport { setTodo } from '../features/currentTodo';\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  renderedTodos: Todo[];\n};\n\nexport const TableList: FC<Props> = ({ renderedTodos }) => {\n  const dispatch = useDispatch();\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n\n  const handleOnClick = (clickedTodo: Todo) => {\n    dispatch(setTodo(clickedTodo));\n  };\n\n  return (\n    <>\n      {!!renderedTodos.length\n        && renderedTodos.map((todo) => {\n          const { title, completed, id } = todo;\n\n          return (\n            <tr data-cy=\"todo\" key={id}>\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames(\n                    { 'has-text-success': completed },\n                    { 'has-text-danger': !completed },\n                  )}\n                >\n                  {title}\n                </p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleOnClick(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames(\n                      'far',\n                      { 'fa-eye': id !== selectedTodo?.id || !selectedTodo },\n                      { 'fa-eye-slash': id === selectedTodo?.id },\n                    )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n    </>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useMemo } from 'react';\nimport { useAppSelector } from '../../app/hooks';\nimport { filterTodos } from '../../utils/filterTodos';\nimport { TableList } from '../TableList';\n\nexport const TodoList: React.FC = () => {\n  const todos = useAppSelector(state => state.todos);\n  const filterStatus = useAppSelector(state => state.filter.status);\n  const query = useAppSelector(state => state.filter.query);\n\n  const visibleTodos = useMemo(() => {\n    return filterTodos(filterStatus, query, todos);\n  }, [filterStatus, query]);\n\n  return (\n    <>\n      {!visibleTodos.length && (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n\n      {!!visibleTodos.length && (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n\n            <TableList renderedTodos={visibleTodos} />\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import { FilterStatus } from '../types/Filter';\nimport { Todo } from '../types/Todo';\n\nexport function filterTodos(\n  filter: string,\n  query: string,\n  todos: Todo[],\n) {\n  let res = [];\n\n  switch (filter) {\n    case FilterStatus.All:\n      res = todos;\n      break;\n\n    case FilterStatus.Completed:\n      res = todos.filter(todo => todo.completed);\n      break;\n\n    case FilterStatus.Active:\n      res = todos.filter(todo => !todo.completed);\n      break;\n\n    default:\n      return todos;\n  }\n\n  if (query) {\n    res = res.filter(el => {\n      return el.title.toLowerCase().includes(query.toLowerCase());\n    });\n  }\n\n  return res;\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilterTypeAction, setQueryAction } from '../../features/filter';\nimport { FilterStatus } from '../../types/Filter';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useDispatch();\n  const [query, setQuery] = useState('');\n\n  const handleFilterStatus = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedFilterStatus = event.currentTarget.value;\n\n    dispatch(setFilterTypeAction(selectedFilterStatus));\n  };\n\n  const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    dispatch(setQueryAction(query));\n  }, [query]);\n\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={e => handleFormSubmit(e)}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => handleFilterStatus(event)}\n          >\n            <option value={FilterStatus.All}>All</option>\n            <option value={FilterStatus.Active}>Active</option>\n            <option value={FilterStatus.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={(event) => handleOnChange(event)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getUser } from '../../api';\nimport { useAppSelector } from '../../app/hooks';\nimport { removeTodo } from '../../features/currentTodo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\nexport const TodoModal = () => {\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [isUserLoading, setIsUserLoading] = useState(false);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      setIsUserLoading(true);\n\n      getUser(selectedTodo?.userId)\n        .then(user => {\n          setSelectedUser(user);\n          setIsUserLoading(false);\n        });\n    }\n  }, [selectedTodo]);\n\n  const dispatch = useDispatch();\n\n  const handleOnClose = () => {\n    dispatch(removeTodo());\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      <div className=\"modal-card\">\n        {isUserLoading\n          ? (\n            <Loader />\n          ) : (\n            <>\n              <header className=\"modal-card-head\">\n                <div\n                  className=\"modal-card-title has-text-weight-medium\"\n                  data-cy=\"modal-header\"\n                >\n                  {`Todo #${selectedTodo?.id}`}\n                </div>\n\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  type=\"button\"\n                  className=\"delete\"\n                  data-cy=\"modal-close\"\n                  onClick={handleOnClose}\n                />\n              </header>\n\n              <div className=\"modal-card-body\">\n                <p className=\"block\" data-cy=\"modal-title\">\n                  {selectedTodo?.title}\n                </p>\n\n                <p className=\"block\" data-cy=\"modal-user\">\n                  {selectedTodo?.completed ? (\n                    <strong className=\"has-text-success\">Done</strong>\n                  ) : (\n                    <strong className=\"has-text-danger\">Planned</strong>\n                  )}\n                  {' by '}\n                  <a href=\"mailto:Sincere@april.biz\">{selectedUser?.name}</a>\n                </p>\n              </div>\n            </>\n          )}\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { useDispatch } from 'react-redux';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppSelector } from './app/hooks';\nimport { getTodos } from './api';\nimport { setTodosAction } from './features/todos';\n\nexport const App: React.FC = () => {\n  const dispatch = useDispatch();\n  const todos = useAppSelector(state => state.todos);\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    getTodos()\n      .then(data => dispatch(setTodosAction(data)));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length\n                ? <Loader />\n                : <TodoList />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {!!selectedTodo && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}